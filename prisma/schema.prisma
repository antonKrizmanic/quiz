generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Answers {
  Id              Int               @id(map: "PK_Answers") @default(autoincrement())
  Text            String            @db.NVarChar(Max)
  IsCorrect       Boolean
  QuestionId      Int
  DateCreated     DateTime          @default(now(), map: "DF__Answers__DateCre__61F08603")
  DateUpdated     DateTime          @default(now(), map: "DF__Answers__DateUpd__62E4AA3C")
  Questions       Questions         @relation(fields: [QuestionId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_Answers_Questions_QuestionId")
  QuizTakeAnswers QuizTakeAnswers[]

  @@index([QuestionId], map: "IX_Answers_QuestionId")
}

model QuestionQuiz {
  QuestionsId Int
  QuizzesId   Int
  Questions   Questions @relation(fields: [QuestionsId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_QuestionQuiz_Questions_QuestionsId")
  Quizzes     Quizzes   @relation(fields: [QuizzesId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_QuestionQuiz_Quizzes_QuizzesId")

  @@id([QuestionsId, QuizzesId], map: "PK_QuestionQuiz")
  @@index([QuizzesId], map: "IX_QuestionQuiz_QuizzesId")
}

model Questions {
  Id                Int                 @id(map: "PK_Questions") @default(autoincrement())
  Text              String              @db.NVarChar(Max)
  QuestionType      Int
  IsActive          Boolean
  ParentId          Int?
  CityAssociationId Int
  ByUserId          Int
  DateCreated       DateTime            @default(now(), map: "DF__Questions__DateC__0B7CAB7B")
  DateUpdated       DateTime            @default(now(), map: "DF__Questions__DateU__0D64F3ED")
  QuizCategoryId    Int                 @default(0, map: "DF__Questions__QuizC__0C70CFB4")
  Answers           Answers[]
  QuestionQuiz      QuestionQuiz[]
  Questions         Questions?          @relation("QuestionsToQuestions", fields: [ParentId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Questions_Questions_ParentId")
  other_Questions   Questions[]         @relation("QuestionsToQuestions")
  QuizCategories    QuizCategories      @relation(fields: [QuizCategoryId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_Questions_QuizCategories_QuizCategoryId")
  QuizTakeQuestions QuizTakeQuestions[]

  @@index([ParentId], map: "IX_Questions_ParentId")
  @@index([QuizCategoryId], map: "IX_Questions_QuizCategoryId")
}

model QuizCategories {
  Id                Int         @id(map: "PK_QuizCategories") @default(autoincrement())
  Name              String      @db.NVarChar(256)
  Description       String?     @db.NVarChar(Max)
  IsActive          Boolean
  CityAssociationId Int
  QuizTheme         Int
  DateCreated       DateTime    @default(now(), map: "DF__QuizCateg__DateC__0E591826")
  DateUpdated       DateTime    @default(now(), map: "DF__QuizCateg__DateU__0F4D3C5F")
  Questions         Questions[]
  Quizzes           Quizzes[]
}

model QuizTakeAnswers {
  Id                 Int               @id(map: "PK_QuizTakeAnswers") @default(autoincrement())
  AnswerId           Int?
  Text               String?           @db.NVarChar(Max)
  IsCorrect          Boolean
  DateCreated        DateTime          @default(now(), map: "DF__QuizTakeA__DateC__1229A90A")
  DateUpdated        DateTime          @default(now(), map: "DF__QuizTakeA__DateU__113584D1")
  QuizTakeQuestionId Int               @default(0, map: "DF__QuizTakeA__QuizT__10416098")
  Answers            Answers?          @relation(fields: [AnswerId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_QuizTakeAnswers_Answers_AnswerId")
  QuizTakeQuestions  QuizTakeQuestions @relation(fields: [QuizTakeQuestionId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_QuizTakeAnswers_QuizTakeQuestions_QuizTakeQuestionId")

  @@index([AnswerId], map: "IX_QuizTakeAnswers_AnswerId")
  @@index([QuizTakeQuestionId], map: "IX_QuizTakeAnswers_QuizTakeQuestionId")
}

model QuizTakeQuestions {
  Id                      Int                 @id(map: "PK_QuizTakeQuestions") @default(autoincrement())
  QuestionId              Int
  QuizTakeId              Int?
  ParentId                Int?
  IsCorrect               Boolean
  DateCreated             DateTime            @default(now(), map: "DF__QuizTakeQ__DateC__1411F17C")
  DateUpdated             DateTime            @default(now(), map: "DF__QuizTakeQ__DateU__131DCD43")
  Index                   Int                 @default(0, map: "DF__QuizTakeQ__Index__150615B5")
  QuizTakeAnswers         QuizTakeAnswers[]
  Questions               Questions           @relation(fields: [QuestionId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_QuizTakeQuestions_Questions_QuestionId")
  QuizTakeQuestions       QuizTakeQuestions?  @relation("QuizTakeQuestionsToQuizTakeQuestions", fields: [ParentId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_QuizTakeQuestions_QuizTakeQuestions_ParentId")
  other_QuizTakeQuestions QuizTakeQuestions[] @relation("QuizTakeQuestionsToQuizTakeQuestions")
  QuizTakes               QuizTakes?          @relation(fields: [QuizTakeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_QuizTakeQuestions_QuizTakes_QuizTakeId")

  @@index([ParentId], map: "IX_QuizTakeQuestions_ParentId")
  @@index([QuestionId], map: "IX_QuizTakeQuestions_QuestionId")
  @@index([QuizTakeId], map: "IX_QuizTakeQuestions_QuizTakeId")
}

model QuizTakes {
  Id                Int                 @id(map: "PK_QuizTakes") @default(autoincrement())
  QuizId            Int
  Score             Int
  QuestionNumber    Int
  StartedAt         DateTime
  EndedAt           DateTime
  TakeUserName      String?             @db.NVarChar(Max)
  TakeUserType      Int
  CityAssociationId Int
  DateCreated       DateTime            @default(now(), map: "DF__QuizTakes__DateC__16EE5E27")
  DateUpdated       DateTime            @default(now(), map: "DF__QuizTakes__DateU__15FA39EE")
  QuizTakeQuestions QuizTakeQuestions[]
  Quizzes           Quizzes             @relation(fields: [QuizId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_QuizTakes_Quizzes_QuizId")

  @@index([QuizId], map: "IX_QuizTakes_QuizId")
}

model Quizzes {
  Id                Int             @id(map: "PK_Quizzes") @default(autoincrement())
  Title             String          @db.NVarChar(Max)
  Description       String?         @db.NVarChar(Max)
  IsActive          Boolean
  IsManuallyCreated Boolean
  QuizTheme         Int
  QuizCategoryId    Int?
  AvailableFrom     DateTime?       @db.Date
  AvailableTo       DateTime?       @db.Date
  DateCreated       DateTime        @default(now(), map: "DF__Quizzes__DateCre__17E28260")
  DateUpdated       DateTime        @default(now(), map: "DF__Quizzes__DateUpd__18D6A699")
  CityAssociationId Int             @default(0, map: "DF__Quizzes__CityAss__19CACAD2")
  QuestionQuiz      QuestionQuiz[]
  QuizTakes         QuizTakes[]
  QuizCategories    QuizCategories? @relation(fields: [QuizCategoryId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Quizzes_QuizCategories_QuizCategoryId")

  @@index([QuizCategoryId], map: "IX_Quizzes_QuizCategoryId")
}
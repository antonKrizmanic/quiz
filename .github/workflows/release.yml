name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  # Job 1: Build Application
  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [quality-check, database]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "22.20.0"

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10.17.1

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install      

      - name: Build application
        run: pnpm build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXT_PUBLIC_API_BASE_URL: ${{ secrets.NEXT_PUBLIC_API_BASE_URL }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: |
            .next/
            package.json
            pnpm-lock.yaml
          retention-days: 1

  # Job 2: Version Management & Release
  release:
    name: Version Management & Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0 # Fetch full history for changelog
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Run Changelog Manager
        uses: Enterwell/ChangelogManager-GitHub-Action@v3
        with:
          should-bump-version: true
        id: changelog

      - name: Update package.json version
        if: steps.changelog.outputs.bumped-semantic-version
        run: |
          CURRENT=$(node -p "require('./package.json').version")
          TARGET=${{ steps.changelog.outputs.bumped-semantic-version }}
          echo "Current version: $CURRENT"
          echo "Target version: $TARGET"
          if [ "$CURRENT" = "$TARGET" ]; then
            echo "Version already $TARGET; skipping npm version"
          else
            npm version "$TARGET" --no-git-tag-version
          fi

      - name: Commit version changes
        if: steps.changelog.outputs.bumped-semantic-version
        uses: EndBug/add-and-commit@v9.1.4
        with:
          message: "[skip ci] [version-bump] Automated commit for version ${{ steps.changelog.outputs.bumped-semantic-version }}"
          add: |
            package.json
            CHANGELOG.md

      - name: Create Git Tag
        if: steps.changelog.outputs.bumped-semantic-version
        run: |
          git tag v${{ steps.changelog.outputs.bumped-semantic-version }}
          git push origin v${{ steps.changelog.outputs.bumped-semantic-version }}

      - name: Create GitHub Release
        if: steps.changelog.outputs.bumped-semantic-version
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.changelog.outputs.bumped-semantic-version }}
          release_name: Release v${{ steps.changelog.outputs.bumped-semantic-version }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false

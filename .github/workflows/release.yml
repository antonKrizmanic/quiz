name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  # Job 1: Build Application
  build:
    name: Build Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "22.20.0"

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10.17.1

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install      

      - name: Build application
        run: pnpm build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXT_PUBLIC_API_BASE_URL: ${{ secrets.NEXT_PUBLIC_API_BASE_URL }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: |
            .next/
            package.json
            pnpm-lock.yaml
          retention-days: 1

  # Job 2: Version Management & Release
  release:
    name: Version Management & Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0 # Fetch full history for changelog
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: "6.0.x"

      - name: Run Changelog Manager
        uses: Enterwell/ChangelogManager-GitHub-Action@v3
        with:
          should-bump-version: true
        id: version-bump

      # Committing new changes
      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: "[skip ci] [version-bump] Automated commit for version ${{ steps.version-bump.outputs.bumped-semantic-version }}"

      # Update Git tags
      - name: Git tags update
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

          git tag "v${{ steps.version-bump.outputs.bumped-semantic-version }}"
          git tag -f "v${{ steps.version-bump.outputs.bumped-major-part }}" "v${{ steps.version-bump.outputs.bumped-semantic-version }}"
          git tag -f "v${{ steps.version-bump.outputs.bumped-major-part }}.${{ steps.version-bump.outputs.bumped-minor-part }}" "v${{ steps.version-bump.outputs.bumped-semantic-version }}"

          git push -f --tags

      # Creating latest release
      - name: Create GitHub release
        run: gh release create "v${{ steps.version-bump.outputs.bumped-semantic-version }}" -n "${{ steps.version-bump.outputs.new-changes }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}